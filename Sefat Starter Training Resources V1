# A. Learning Binder
###### August 8, 2016

## Purpose
This binder document is a learning aid of assembled resources and self-learning kits for those wishing to develop
and accelerate their understanding, adoption and use of Nodejs and open source tools to develop and test APIs rapidly.

## Binder Contents and Organization
### Sections
Binder content is organized by four sections:
1. Section A: Binder Structure
2. Section B: Learning Modules / Kits
3. Section C: Additional Resources
4. Section D: Vendor Resources

### Learning Modules
The bulk of the Learning Binder comprises of the framework of Learning Modules.
A Learning Module represents a set of related and coherent topics for a specific subject area
Module Organization:
1. Self-Starter kit for a specific learning subject.
2. Each learning module will identify learning prerequisites.
3. Define core concepts Concepts.
4. Outline Learning Objectives
5. Give examples of usage

Core Concept examples:
-  NPM – Stands for node package manager. This will help us install the latest modules directly from the servers instead of checking for the latest version, downloading and copying to the appropriate directory. It also has other uses.
-  Express – Express is a highly recommended web application framework for node.js. It takes care of the low level services for us.
-  Module – A module is an independent, reusable piece of code. you can download them and use them directly in your project. ex: express, http, https etc. are some of the modules for node.js.


### Module Contents (Structure & Elements)
1.0 Module = Focus Area (Brief definition / description)

    1.1 Topics = Focus Areas (1 page)

        1.1.1 Objectives = Key Learning Goals
        1.1.2 Module Concepts
        1.1.3 Learning Resources
              a) Further Readings Links
              b) Code Samples

***

# B.  Learning Modules

##### 1. Prerequisites
###### Must Have
 - Basic programming skills (one language)

###### Useful to Have
 - Node.JS Concepts
 - Familiarity with APIs
 - Javascript Language Essentials
 - Awareness of Open Source Development Tools

***

##### 2. APIs
1.      API Economy
2.      Restful APIs
3.      Market Place
4.      DevOps
5.      JSON

***

##### 3. Environment Setup Basics
"Local First" is the development ethos

1.      Node.JS Server
2.      Node Package Manager
 -        Important Modules
3.      Node Application Project
  - Anatomy and File structure
  - Key files
4.      Frameworks
 - Express: Creating A Web Server With Express.js
 - Angular.JS
 - Istanbul.JS
5.      Environment building blocks
6.      Application file structure
7.      Dependencies

***

##### 4. Tools
1.      Git / GitHub
2.      DockerHub
3.      Logging Tools
4.      Debug Tools
5.      Testing Frameworks
6.      Atom
 
***

##### 5. API DevOps Cycle

***

##### 6. Advanced NodeJS Topics
1.      Prototype
2.      Callbacks
3.      Inheritance
4.      Synch
5.      Event Loop
6.      Clusters
7.      Workshop / Exercises / Code Samples

Asynchronous– Asynchronous means an event which is happening independently of other events. The main advantage of the asynchronous approach is scalability.


Basic definitions and understanding of core concepts
Reuse selected Resources and GitHub materials as much as possible

***

###### 7. Working with Databases
1.  Mongo DB
2.  MySQL
3.  Mongoose– Mongoose is a Mongo DB object modeling tool for node.js. It becomes easy to interact with mongo dB database server using Mongoose module.
4.  Db-MySQL– It is a node.js module to interact with MySQL database.

***

##### 8. RESTful APIs
1.      JSON
2.      APIs


***

##### 9. Testing Automation
1.      Jasmine.js
2.      Istanbul.js

***

## Other Topics

##### 1. The Front-end Web App
1.      Angular.js
2.      Ember

***


# C. Learning Resources
(in order of preference)

##### A) Reference Web Sites
(Reliable / independent Nodejs and JavaScript reference materials)
1.     Node Source Of Truth - Nodejs.Org
2.     MDN - https://developer.mozilla.org/en-US/docs/Web/JavaScript
3.     ECMAScript6  -http://es6-features.org/#Constants
4.     Google - TBD (V8?)

##### B) Recommended Books
1.     From Amazon - TBD
2.     O' Reilly
3.     www.nodebeginner.org/

##### C) Training and Tutorials
1.     Udemmy _reasonably priced training (<$30)
2.     Express - http://www.tutorialindustry.com/node-js-express-tutorial
3.     https://www.airpair.com/javascript/node-js-tutorial
4.     Nodeschool
5.     Git - Git-it Guide
6.     Node Hero - Node.js Project Structure Tutorial | @RisingStack

##### D) Blogs
1.     Why Use Node.js? A Comprehensive Tutorial with Examples | Toptal
2.     Node.js Best Practices
3.     https://blog.risingstack.com/node-hero-node-js-project-structure-tutorial/
4.     How I Structure RESTful APIs using Express 4

***

# D. Vendor-Platforms
##### 1. Amazon
-       Learn how to create a simple Node.js web application and deploy it to an AWS cloud service
-       A tutorial that builds on the cloud service tutorial, and demonstrates how to use the Express module.

##### 2. Microsoft
-      Learn how to create a simple Node.js web application and deploy it to an Azure cloud service -  Build and deploy a Node.js application to an Azure Cloud Service
-      A tutorial that builds on the cloud service tutorial, and demonstrates how to use the Express module.

##### 3. IBM
-      Learn how to create a simple Node.js web application and deploy it to an IBM Cloud Data services
-      A tutorial that builds on the cloud service tutorial, and demonstrates how to use the Express module.
